{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1yAi3PfntYflw2Gp2GRiaZG-80eAl_BQt","timestamp":1697478967580},{"file_id":"1i44AfDGKl8JaFJObU_t9XmguptohTvyc","timestamp":1658651731030}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from keras import models\n","from keras import layers"],"metadata":{"id":"bXSKSxl-A16S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Utilización de keras para reconocimiento de dígitos manuscritos\n","\n","Datos de partida: utilizaremos el [dataset MNIST, recopilado y compartido por Yann LeCun](http://yann.lecun.com/exdb/mnist/) y que podemos cargar desde la propia librería de Keras.\n","\n"],"metadata":{"id":"mG2ze-xlKETk"}},{"cell_type":"markdown","source":["### 1. Carga el dataset MNIST de Keras\n","\n","Empezamos por importar el dataset desde la librería Keras y cargarlo con el método load_data()\n","\n","\n"],"metadata":{"id":"Wptf6-XVOFBZ"}},{"cell_type":"code","source":["from keras.datasets import mnist\n","\n","(train_images, train_labels), (test_images,test_labels) = mnist.load_data()"],"metadata":{"id":"N-KYTabPkfPh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697477451586,"user_tz":-120,"elapsed":637,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"b64791a2-a037-418e-e516-2aa277bb2f24"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n"]}]},{"cell_type":"code","source":["train_images.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NV8pCNwU1w8F","executionInfo":{"status":"ok","timestamp":1697217534313,"user_tz":-120,"elapsed":4,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"176d764d-cecc-4853-d7c9-a7b92a8b9eb4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 28, 28)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["len(train_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BjiJfG3k13mp","executionInfo":{"status":"ok","timestamp":1697217534314,"user_tz":-120,"elapsed":4,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"99eeaa8f-5475-49cc-b3f4-19e71fe932a3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["60000"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["train_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RDM4rxrH188l","executionInfo":{"status":"ok","timestamp":1697217534726,"user_tz":-120,"elapsed":415,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"64126e9e-7b36-42d1-cf97-6d7bfc851dce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["test_images.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pte1I5L51_t6","executionInfo":{"status":"ok","timestamp":1697217534726,"user_tz":-120,"elapsed":11,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"0785b232-d1d7-4ea1-c11b-07124b6e0854"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 28, 28)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["len(test_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6u4PhPEt2fjt","executionInfo":{"status":"ok","timestamp":1697217534726,"user_tz":-120,"elapsed":8,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"c142f9fa-f4ed-4ee0-c7aa-28afaa2c1d5f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10000"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["plt.figure()\n","plt.imshow(train_images[0],cmap='binary')\n","plt.colorbar()\n","plt.xticks([])\n","plt.yticks([])\n","plt.xlabel('label: %d'% (train_labels[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"8izochpB2sKu","executionInfo":{"status":"ok","timestamp":1697217534726,"user_tz":-120,"elapsed":6,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"81dafcd7-0420-4082-fe95-c1c92e7b0c85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'label: 5')"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["train_images = train_images/255\n","test_images = test_images/255"],"metadata":{"id":"FhoG5OP58AoP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Construcción del modelo\n","\n","Importamos los módulos para crear un modelo y para utilizar la arquitectura por capas típica del deep learning.\n","Creamos el objeto network, que será nuestro modelo de la clase Sequential(), que es la que admite varias capas de profundidad.\n","Después, con el método add, iremos apilando capas, en este caso, de la clase Dense, que los las de la arquitectura típica de red neuronal (densely connected). Una primera capa tendrá el atributo de 512 neuronas y función de activación \"relu\" y la siguiente capa tendrá 10 neuronas y función de activación \"softmax\"\n","\n","\n"],"metadata":{"id":"Wl-D_y4sPQuI"}},{"cell_type":"code","source":["network = models.Sequential()\n","network.add(layers.Flatten(input_shape=(28,28)))\n","network.add(layers.Dense(512, activation = 'relu'))\n","network.add(layers.Dense(10, activation = 'softmax'))\n"],"metadata":{"id":"g8UbsqkHkgTJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3. Fijar los parámetros del entrenamiento\n","\n","Con el método compile(), indicamos el optimizador a utilizar, el tipo de función de coste (la relacionada con el error entre el resultado del modelo y las etiquetas dadas) y la métrica que queremos ir monitorizando durante el entrenamiento, que será 'accuracy' (precisión o casos correctamente clasificados).\n","\n"],"metadata":{"id":"f6Hx0hkcXqVe"}},{"cell_type":"code","source":["network.compile(optimizer = 'rmsprop',\n","                loss = 'sparse_categorical_crossentropy',\n","                metrics = ['accuracy'])"],"metadata":{"id":"gkYjGt-HkhyQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 4. Otra opción de preparación de las entradas\n","\n","En vez de normalizar y usar la capa Flatten, podemos hacer algunos ajustes.\n","Por un lado, cambiamos las dimensiones del array que entrará en el modelo, pasando a forma vector. Por otro, adimensionalizamos los valores de instensidad de los pixeles de las imágenes, para que estén entre 0 y 1 (antes estaban entre 0 y 255) y los convertimos en tipo float32.\n","\n"],"metadata":{"id":"lURH8Ng1ZRxv"}},{"cell_type":"code","source":["# train_images = train_images.reshape((60000, 28*28))\n","# train_images = train_images.astype('float32')/255\n","\n","# test_images = test_images.reshape((10000, 28*28))\n","# test_images = test_images.astype('float32')/255\n","\n","# network = models.Sequential()\n","# network.add(layers.Dense(512, activation = 'relu'))\n","# network.add(layers.Dense(10, activation = 'softmax'))\n","\n","# network.compile(optimizer = 'rmsprop',\n","#                 loss = 'sparse_categorical_crossentropy',\n","#                 metrics = ['accuracy'])"],"metadata":{"id":"5YmYl6ogbdKN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Tambien puede que nos interese pasar las etiquetas a tipo \"categórico\", pero no es imprescindible\n","\n"],"metadata":{"id":"XZn_cHZbX9fp"}},{"cell_type":"code","source":["# from tensorflow.keras.utils import to_categorical\n","\n","# train_labels = to_categorical(train_labels)\n","# test_labels = to_categorical(test_labels)"],"metadata":{"id":"2VB6W34fRpsv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 5. Entrenamiento del modelo\n","\n","Llegamos al paso culminante: el entrenamiento del modelo. Se hace utilizando el método fit(), con los parámetros imprescindibles del conjunto de datos de entrada, el número de iteraciones de cálculo, y el tamaño del lote de datos a utilizar en cada iteración.\n","\n","\n"],"metadata":{"id":"8ABn93k5bpaB"}},{"cell_type":"code","source":["network.fit(train_images, train_labels, epochs = 5, batch_size = 128)"],"metadata":{"id":"hwm9bmIPcNvo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697217577046,"user_tz":-120,"elapsed":42005,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"c79d6da2-21a4-4709-d954-91d956044b82"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","469/469 [==============================] - 5s 10ms/step - loss: 0.2646 - accuracy: 0.9237\n","Epoch 2/5\n","469/469 [==============================] - 6s 12ms/step - loss: 0.1060 - accuracy: 0.9690\n","Epoch 3/5\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0709 - accuracy: 0.9788\n","Epoch 4/5\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0501 - accuracy: 0.9851\n","Epoch 5/5\n","469/469 [==============================] - 6s 13ms/step - loss: 0.0376 - accuracy: 0.9889\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7c0754be60b0>"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["### 6. Evaluación del modelo entrenado\n","\n","Ahora probamos el modelo entrenado utilizando el método evaluate() y los datos de test.\n","\n"],"metadata":{"id":"6hA7rKINCChO"}},{"cell_type":"code","source":["test_loss,test_acc = network.evaluate(test_images, test_labels)\n","print(\"test_acc: \", test_acc)"],"metadata":{"id":"S7ZI1jKxC7Ti","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697217578706,"user_tz":-120,"elapsed":1664,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"470a3a2e-8fde-426d-f394-c960052eaba7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 1s 3ms/step - loss: 0.0667 - accuracy: 0.9797\n","test_acc:  0.9797000288963318\n"]}]},{"cell_type":"markdown","source":["Podemos ver que se obtiene una precisión del 97%-98% con los nuevos datos de test."],"metadata":{"id":"rFc5WnxlYRq3"}},{"cell_type":"code","source":["predictions = network.predict(test_images)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8-od5jVIAadT","executionInfo":{"status":"ok","timestamp":1697217579908,"user_tz":-120,"elapsed":1206,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"070c21fb-e68e-4014-87b5-ab119d1fb8c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 1s 3ms/step\n"]}]},{"cell_type":"code","source":["# Plot the first 25 test images, their predicted label, and the true label\n","# Color correct predictions in green, incorrect predictions in red\n","plt.figure(figsize=(10,10))\n","for i in range(25):\n","    plt.subplot(5,5,i+1)\n","    plt.xticks([])\n","    plt.yticks([])\n","    plt.grid('off')\n","    plt.imshow(test_images[i], cmap=plt.cm.binary)\n","    predicted_label = np.argmax(predictions[i])\n","    true_label = test_labels[i]\n","    if predicted_label == true_label:\n","      color = 'green'\n","    else:\n","      color = 'red'\n","    plt.xlabel(\"{} ({})\".format(predicted_label,\n","                                  true_label),\n","                                  color=color)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":826},"id":"15znJbn9AEBk","executionInfo":{"status":"ok","timestamp":1697217582030,"user_tz":-120,"elapsed":2126,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"36a380d8-3f33-4241-ac25-223f94b11c9e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 25 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Guardar el Modelo\n","network.save('network_98.h5')\n","\n","# Recrea exactamente el mismo modelo solo desde el archivo\n","# new_model = keras.models.load_model('network_98.h5')"],"metadata":{"id":"HGPh58AO-sNQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Modelo Convolucional MNIST"],"metadata":{"id":"GPcssrRghIIU"}},{"cell_type":"code","source":["from keras.layers import Dense, Conv2D, Dropout, Flatten, MaxPooling2D\n","\n","model_conv = models.Sequential()\n","\n","model_conv.add(Conv2D(28, kernel_size=(3,3), input_shape = (28,28,1)))\n","model_conv.add(MaxPooling2D(pool_size=(2,2)))\n","\n","model_conv.add(Flatten())\n","model_conv.add(Dense(128, activation='relu', use_bias=True))\n","model_conv.add(Dropout(0.3))\n","\n","model_conv.add(Dense(70, activation='relu', use_bias=True))\n","model_conv.add(Dropout(0.5))\n","\n","model_conv.add(Dense(10, activation='softmax'))\n","\n","model_conv.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nETWi21OhHKy","executionInfo":{"status":"ok","timestamp":1697478290408,"user_tz":-120,"elapsed":275,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"cfa23a48-43a7-4688-a792-c269eb059e4c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_4 (Conv2D)           (None, 26, 26, 28)        280       \n","                                                                 \n"," max_pooling2d_4 (MaxPoolin  (None, 13, 13, 28)        0         \n"," g2D)                                                            \n","                                                                 \n"," flatten_4 (Flatten)         (None, 4732)              0         \n","                                                                 \n"," dense_12 (Dense)            (None, 128)               605824    \n","                                                                 \n"," dropout_8 (Dropout)         (None, 128)               0         \n","                                                                 \n"," dense_13 (Dense)            (None, 70)                9030      \n","                                                                 \n"," dropout_9 (Dropout)         (None, 70)                0         \n","                                                                 \n"," dense_14 (Dense)            (None, 10)                710       \n","                                                                 \n","=================================================================\n","Total params: 615844 (2.35 MB)\n","Trainable params: 615844 (2.35 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model_conv.compile(optimizer='adam',loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","\n","model_conv.fit(train_images, train_labels, epochs=15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0q71d9KOjYJ6","executionInfo":{"status":"ok","timestamp":1697478860024,"user_tz":-120,"elapsed":563454,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"27d76b03-8a9b-43f2-9a6b-405241545f9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/15\n","1875/1875 [==============================] - 35s 18ms/step - loss: 0.3767 - accuracy: 0.8902\n","Epoch 2/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.1607 - accuracy: 0.9561\n","Epoch 3/15\n","1875/1875 [==============================] - 34s 18ms/step - loss: 0.1204 - accuracy: 0.9661\n","Epoch 4/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.1042 - accuracy: 0.9709\n","Epoch 5/15\n","1875/1875 [==============================] - 35s 19ms/step - loss: 0.0869 - accuracy: 0.9756\n","Epoch 6/15\n","1875/1875 [==============================] - 34s 18ms/step - loss: 0.0771 - accuracy: 0.9785\n","Epoch 7/15\n","1875/1875 [==============================] - 32s 17ms/step - loss: 0.0699 - accuracy: 0.9798\n","Epoch 8/15\n","1875/1875 [==============================] - 34s 18ms/step - loss: 0.0613 - accuracy: 0.9828\n","Epoch 9/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.0577 - accuracy: 0.9829\n","Epoch 10/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.0532 - accuracy: 0.9847\n","Epoch 11/15\n","1875/1875 [==============================] - 37s 20ms/step - loss: 0.0507 - accuracy: 0.9850\n","Epoch 12/15\n","1875/1875 [==============================] - 39s 21ms/step - loss: 0.0485 - accuracy: 0.9857\n","Epoch 13/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.0469 - accuracy: 0.9867\n","Epoch 14/15\n","1875/1875 [==============================] - 33s 18ms/step - loss: 0.0442 - accuracy: 0.9872\n","Epoch 15/15\n","1875/1875 [==============================] - 34s 18ms/step - loss: 0.0411 - accuracy: 0.9884\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7a5d38a42830>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["test_loss,test_acc = model_conv.evaluate(test_images, test_labels)\n","print(\"test_acc: \", test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4CzT2qPbkAGK","executionInfo":{"status":"ok","timestamp":1697478864800,"user_tz":-120,"elapsed":2123,"user":{"displayName":"Carmen Bartolomé","userId":"02406313301942165558"}},"outputId":"54ec2699-27ea-4179-eda4-27d698b52d04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 2s 5ms/step - loss: 0.0723 - accuracy: 0.9853\n","test_acc:  0.9853000044822693\n"]}]}]}